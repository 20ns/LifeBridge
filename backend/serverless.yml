service: lifebridge-backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: ${opt:stage, 'dev'}  environment:
    STAGE: ${self:provider.stage}
    # Medical-grade compliance configuration
    AUDIT_LOGS_TABLE: lifebridge-audit-logs-${self:provider.stage}
    REVIEW_REQUESTS_TABLE: lifebridge-review-requests-${self:provider.stage}
    IMPACT_METRICS_TABLE: lifebridge-impact-metrics-${self:provider.stage}
    KMS_KEY_ID: !Ref LifeBridgeKMSKey
    REVIEW_ALERTS_TOPIC_ARN: !Ref ReviewAlertsSnsTopic
    AUDIT_LOG_GROUP: /aws/lifebridge/audit-${self:provider.stage}
    AWS_REGION: ${self:provider.region}iamRoleStatements:
   - Effect: Allow
     Action:
       - bedrock:InvokeModel
       - bedrock:ListFoundationModels
     Resource: '*'
   - Effect: Allow
     Action:
       - polly:SynthesizeSpeech
     Resource: '*'
   - Effect: Allow
     Action:
       - logs:CreateLogGroup
       - logs:CreateLogStream
       - logs:PutLogEvents
     Resource: '*'
   # Medical-grade compliance and quality assurance permissions
   - Effect: Allow
     Action:
       - dynamodb:PutItem
       - dynamodb:GetItem
       - dynamodb:UpdateItem
       - dynamodb:Query
       - dynamodb:Scan
     Resource: 
       - arn:aws:dynamodb:${self:provider.region}:*:table/lifebridge-audit-logs-${self:provider.stage}
       - arn:aws:dynamodb:${self:provider.region}:*:table/lifebridge-review-requests-${self:provider.stage}
       - arn:aws:dynamodb:${self:provider.region}:*:table/lifebridge-impact-metrics-${self:provider.stage}
       - arn:aws:dynamodb:${self:provider.region}:*:index/*
   - Effect: Allow
     Action:
       - kms:Encrypt
       - kms:Decrypt
       - kms:ReEncrypt*
       - kms:GenerateDataKey*
       - kms:DescribeKey
     Resource: 
       - arn:aws:kms:${self:provider.region}:*:key/*
   - Effect: Allow
     Action:
       - sns:Publish
       - sns:Subscribe
       - sns:CreateTopic
     Resource: '*'
   - Effect: Allow
     Action:
       - cloudwatch:PutMetricData
     Resource: '*'

functions:
  translate:
    handler: dist/handlers/translate.handler
    timeout: 30
    events:
      - http:
          path: /translate
          method: post
          cors: true

  detectLanguage:
    handler: dist/handlers/detectLanguage.handler
    timeout: 15
    events:
      - http:
          path: /detect-language
          method: post
          cors: true

  textToSpeech:
    handler: dist/handlers/textToSpeech.handler
    timeout: 20
    events:
      - http:
          path: /text-to-speech
          method: post
          cors: true

  emergencyPhrases:
    handler: dist/handlers/emergencyPhrases.handler
    timeout: 20
    events:
      - http:
          path: /emergency-phrases
          method: get
          cors: true

  speechToText:
    handler: dist/handlers/speechToText.handler
    timeout: 60
    events:
      - http:
          path: /speech-to-text
          method: post
          cors: true

  emergencyProtocol:
    handler: dist/handlers/amazonQ.getEmergencyProtocol
    timeout: 30
    events:
      - http:
          path: /emergency-protocol
          method: post
          cors: true

  triageSuggestion:
    handler: dist/handlers/amazonQ.getTriageSuggestion
    timeout: 30
    events:
      - http:
          path: /triage-suggestion
          method: post
          cors: true

  contextualAdvice:
    handler: dist/handlers/amazonQ.getContextualAdvice
    timeout: 30
    events:
      - http:
          path: /contextual-advice
          method: post
          cors: true

  signLanguageProcessor:
    handler: dist/handlers/signLanguageProcessor.handler
    timeout: 20
    events:
      - http:
          path: /sign-language-process
          method: post
          cors: true

  signToTranslation:
    handler: dist/handlers/signLanguageProcessor.signToTranslation
    timeout: 30
    events:
      - http:
          path: /sign-to-translation
          method: post
          cors: true

  batchSignProcessing:
    handler: dist/handlers/signLanguageProcessor.batchSignProcessing
    timeout: 45
    events:
      - http:
          path: /batch-sign-processing
          method: post
          cors: true

  getPendingReviews:
    handler: dist/handlers/humanReview.getPendingReviews
    timeout: 30
    events:
      - http:
          path: /review/pending
          method: get
          cors: true

  submitReview:
    handler: dist/handlers/humanReview.submitReview
    timeout: 30
    events:
      - http:
          path: /review/submit
          method: post
          cors: true

  escalateReview:
    handler: dist/handlers/humanReview.escalateEmergencyReview
    timeout: 30
    events:
      - http:
          path: /review/escalate
          method: post
          cors: true

  getReviewMetrics:
    handler: dist/handlers/humanReview.getReviewMetrics
    timeout: 30
    events:
      - http:
          path: /review/metrics
          method: get
          cors: true

  gestureRecognition:
    handler: dist/handlers/gestureRecognition.handler
    timeout: 20
    events:
      - http:
          path: /gesture-recognition
          method: post
          cors: true

plugins:
  - serverless-offline

resources:
  Resources:
    # Medical-grade audit logging table (HIPAA compliant)
    AuditLogsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lifebridge-audit-logs-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: eventId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: eventId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: timestamp-index
            KeySchema:
              - AttributeName: timestamp
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        SSESpecification:
          SSEEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        Tags:
          - Key: Purpose
            Value: HIPAA-Compliant-Audit-Logging
          - Key: Environment
            Value: ${self:provider.stage}

    # Human review requests table
    ReviewRequestsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lifebridge-review-requests-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: requestId
            AttributeType: S
          - AttributeName: reviewStatus
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: requestId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: reviewStatus-timestamp-index
            KeySchema:
              - AttributeName: reviewStatus
                KeyType: HASH
              - AttributeName: timestamp
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        Tags:
          - Key: Purpose
            Value: Human-Review-Workflow
          - Key: Environment
            Value: ${self:provider.stage}

    # Impact metrics and analytics table
    ImpactMetricsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: lifebridge-impact-metrics-${self:provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: metricId
            AttributeType: S
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: metricId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: timestamp-index
            KeySchema:
              - AttributeName: timestamp
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        Tags:
          - Key: Purpose
            Value: Medical-Impact-Analytics
          - Key: Environment
            Value: ${self:provider.stage}

    # KMS key for encryption at rest
    LifeBridgeKMSKey:
      Type: AWS::KMS::Key
      Properties:
        Description: LifeBridge medical data encryption key
        KeyPolicy:
          Version: '2012-10-17'
          Statement:
            - Sid: Enable IAM User Permissions
              Effect: Allow
              Principal:
                AWS: 
                  - 'arn:aws:iam::#{AWS::AccountId}:root'
              Action: 'kms:*'
              Resource: '*'
            - Sid: Allow LifeBridge Lambda Functions
              Effect: Allow
              Principal:
                AWS: 
                  - !GetAtt IamRoleLambdaExecution.Arn
              Action:
                - kms:Encrypt
                - kms:Decrypt
                - kms:ReEncrypt*
                - kms:GenerateDataKey*
                - kms:DescribeKey
              Resource: '*'
        Tags:
          - Key: Purpose
            Value: LifeBridge-Medical-Data-Encryption
          - Key: Environment
            Value: ${self:provider.stage}

    LifeBridgeKMSKeyAlias:
      Type: AWS::KMS::Alias
      Properties:
        AliasName: alias/lifebridge-${self:provider.stage}
        TargetKeyId: !Ref LifeBridgeKMSKey

    # SNS topic for review alerts
    ReviewAlertsSnsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: lifebridge-review-alerts-${self:provider.stage}
        DisplayName: LifeBridge Review Alerts
        KmsMasterKeyId: !Ref LifeBridgeKMSKey
        Tags:
          - Key: Purpose
            Value: Human-Review-Notifications
          - Key: Environment
            Value: ${self:provider.stage}

    # CloudWatch Log Group for audit logs
    AuditLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lifebridge/audit-${self:provider.stage}
        RetentionInDays: 2557  # 7 years for medical compliance
        KmsKeyId: !GetAtt LifeBridgeKMSKey.Arn

  Outputs:
    AuditLogsTableName:
      Description: Name of the audit logs DynamoDB table
      Value: !Ref AuditLogsTable
      Export:
        Name: ${self:service}-${self:provider.stage}-AuditLogsTable

    ReviewRequestsTableName:
      Description: Name of the review requests DynamoDB table
      Value: !Ref ReviewRequestsTable
      Export:
        Name: ${self:service}-${self:provider.stage}-ReviewRequestsTable

    ImpactMetricsTableName:
      Description: Name of the impact metrics DynamoDB table
      Value: !Ref ImpactMetricsTable
      Export:
        Name: ${self:service}-${self:provider.stage}-ImpactMetricsTable

    KMSKeyId:
      Description: KMS Key ID for encryption
      Value: !Ref LifeBridgeKMSKey
      Export:
        Name: ${self:service}-${self:provider.stage}-KMSKey

    ReviewAlertsTopicArn:
      Description: SNS Topic ARN for review alerts
      Value: !Ref ReviewAlertsSnsTopic
      Export:
        Name: ${self:service}-${self:provider.stage}-ReviewAlertsTopic

custom:
  serverless-offline:
    httpPort: 3001
    host: localhost
