service: lifebridge-backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  stage: ${opt:stage, 'dev'}
  environment:
    STAGE: ${self:provider.stage}
  iamRoleStatements:
   - Effect: Allow
     Action:
       - bedrock:InvokeModel
       - bedrock:ListFoundationModels
     Resource: '*'
   - Effect: Allow
     Action:
       - polly:SynthesizeSpeech
     Resource: '*'
   - Effect: Allow
     Action:
       - logs:CreateLogGroup
       - logs:CreateLogStream
       - logs:PutLogEvents
     Resource: '*'

functions:
  translate:
    handler: dist/handlers/translate.handler
    timeout: 30
    events:
      - http:
          path: /translate
          method: post
          cors: true

  detectLanguage:
    handler: dist/handlers/detectLanguage.handler
    timeout: 15
    events:
      - http:
          path: /detect-language
          method: post
          cors: true

  textToSpeech:
    handler: dist/handlers/textToSpeech.handler
    timeout: 20
    events:
      - http:
          path: /text-to-speech
          method: post
          cors: true

  emergencyPhrases:
    handler: dist/handlers/emergencyPhrases.handler
    timeout: 20
    events:
      - http:
          path: /emergency-phrases
          method: get
          cors: true

  speechToText:
    handler: dist/handlers/speechToText.handler
    timeout: 60
    events:
      - http:
          path: /speech-to-text
          method: post
          cors: true

  emergencyProtocol:
    handler: dist/handlers/amazonQ.getEmergencyProtocol
    timeout: 30
    events:
      - http:
          path: /emergency-protocol
          method: post
          cors: true

  triageSuggestion:
    handler: dist/handlers/amazonQ.getTriageSuggestion
    timeout: 30
    events:
      - http:
          path: /triage-suggestion
          method: post
          cors: true

  contextualAdvice:
    handler: dist/handlers/amazonQ.getContextualAdvice
    timeout: 30
    events:
      - http:
          path: /contextual-advice
          method: post
          cors: true

  signLanguageProcessor:
    handler: dist/handlers/signLanguageProcessor.handler
    timeout: 20
    events:
      - http:
          path: /sign-language-process
          method: post
          cors: true

  signToTranslation:
    handler: dist/handlers/signLanguageProcessor.signToTranslation
    timeout: 30
    events:
      - http:
          path: /sign-to-translation
          method: post
          cors: true

  batchSignProcessing:
    handler: dist/handlers/signLanguageProcessor.batchSignProcessing
    timeout: 45
    events:
      - http:
          path: /batch-sign-processing
          method: post
          cors: true
  gestureRecognition:
    handler: dist/handlers/gestureRecognition.handler
    timeout: 20
    events:
      - http:
          path: /gesture-recognition
          method: post
          cors: true

plugins:
  - serverless-offline

resources:
  Resources:
    # Buckets already exist; left commented for reference
    # TranscribeBucket:
    #   Type: AWS::S3::Bucket
    #   Properties:
    #     BucketName: lifebridge-transcribe-temp-${self:provider.stage}
    # ...
    # MLModelsBucket:
    #   Type: AWS::S3::Bucket
    #   Properties:
    #     BucketName: lifebridge-ml-models-${self:provider.stage}
    # ...

custom:
  serverless-offline:
    httpPort: 3001
    host: localhost
