name: Continuous Integration

on:
  push:
    branches: [ "main", "cleaning_up" ]
  pull_request:
    branches: [ "main", "cleaning_up" ]

jobs:
  backend-frontend-ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install root scripts
        run: |
          npm install -g npm@latest

      - name: Install Backend dependencies
        working-directory: backend
        run: npm ci --ignore-scripts

      - name: Backend ESLint
        working-directory: backend
        run: npx eslint "src/**/*.ts" --max-warnings 0

      - name: Run Backend Tests
        working-directory: tests
        run: npm ci && npm test -- --coverage

      - name: Install Frontend dependencies
        working-directory: frontend
        run: npm ci --ignore-scripts

      - name: Frontend ESLint
        working-directory: frontend
        run: npx eslint "src/**/*.tsx" --max-warnings 0

      - name: Frontend Unit Tests
        working-directory: frontend
        run: npm test -- --watchAll=false --coverage

  # Aggregate test coverage reports if generated
  # (each project can output coverage/ in its directory)
  upload-coverage:
    needs: backend-frontend-ci
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            frontend/coverage/
            backend/coverage/
          if-no-files-found: ignore